### MIN and MAX ###

>>> a = [1,-9,5,90]
>>> def minamax(mx):
...     mini = min(mx)
...     maxi = max(mx)
...     print(f'min is {mini} and max is {maxi}')
...
>>> minamax(a)
min is -9 and max is 90
>>>


### FACTORIALS ####

# USING RECURCION

def recfact(n):
    if n == 0:
        return 1
    return n * recfact(n - 1)
print(recfact(5))
120

# USING LOOPS

x = 1
for n in range(5):
    x = x * (n+1)
print(x)

### isinstance ###

# def function():
#     return 777
# a = function
# print('It is a string? ', isinstance(a, str))
# print('It is an integer? ', isinstance(a, int))
# print('It is an object? ' , isinstance(a, object))
# print('It is a boolean? ', isinstance(a, bool))
# print('It is a float? ', isinstance(a, float))


### function in function ###

# def functionxxx():
#     print('The variable is defenied')
# def functionmain():
#     print('This is main function')
#     print('This is xxx function -')
#     functionxxx()
# functionmain()


# ### try and except ###

# try:
#     input = int(input())
# except:
#     print('^ Something wrong! ^')

### callable ###

# def function_one():
#     pass

# var_a = 'string'
# var_b = function_one
# var_c = var_d = function_one()

# print(callable(len)), print(callable(int)), print(callable(var_a)), print(callable(var_b)), print(callable(var_d))

### max and min  ###

print("# list #")
s = [1,3,4,6,6,7,6786878,789,0]
print('max - ', max(s))
print('min - ', min(s))
print("\n# tuple #")
s = (1,3,4,6,6,7,6786878,789,0)
print('max - ', max(s))
print('min - ', min(s))
print("\n# set #")
s = {1,3,4,6,6,7,6786878,789,0}
print('max - ', max(s))
print('min - ', min(s))
print("\n# dict #")
s = {1:2,3:3,4:5,6:7,6:8,7:9,6786878:10,789:0,0:11}
print('max - ', max(s))
print('min - ', min(s))

# ### try and except ###

# try:
#     input = int(input())
# except:
#     print('^ Something wrong! ^')

### callable ###

# def function_one():
#     pass

# var_a = 'string'
# var_b = function_one
# var_c = var_d = function_one()

# print(callable(len)), print(callable(int)), print(callable(var_a)), print(callable(var_b)), print(callable(var_d))

### SUM ###

# print(sum((1,2,3)))
# print(sum([1,2,3]))
# print(sum({1,2,3}))
# print(sum({1:2,2:3,3:4}))

### ARGS, KWARGS ###

# s = [1, 2, 3, 4, 5, 6, 7]
# sa = {'a': 'b', 'c': 'd', 'e': 'f'}

# def itsargs(*args):
#     print(args)

# def itskwargs(**kwargs):
#     print(kwargs)
    
# itsargs(1,2,3,4,5,6,7)
# itsargs(*s)
# itsargs(s)
# itskwargs(**sa)
# itskwargs(key0='var0', key1=2)
